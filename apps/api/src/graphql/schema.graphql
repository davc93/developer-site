type Query {
  hello: String!
  Label(id: Int): Label
  Labels: [Label!]
  Project(id: Int): Project
  Projects: [Project!]
  Profile: Profile!
}
type Label {
  id: ID!
  title: String!
  type: String
  image: String!
  createdAt: String!
}
type Image {
    id:ID!,
    projectId:Int
    createdAt:String!
    url:String!
}
type Project {
  id: ID!
  title: String!
  description: String
  shortDescription: String!
  link: String
  repository: String
  published: Boolean!
  createdAt: String!
  slug: String!
  images: [Image!]
  labels: [Label!]
}
type Profile {
  id: ID!
  email: String!
  role: String!
  password: String
}
type Mutation {

  addProject(dto:CreateProjectInput): Project
  deleteProject(id:ID!):ID
  
  updateProject(id:ID!,dto:UpdateProjectInput):Project
  addLabel(dto:CreateLabelInput): Label
  updateLabel(id:ID!,dto:UpdateLabelInput):Label
  deleteLabel(id:ID!):ID
   
}

input CreateProjectInput {
  title: String!
  description: String
  shortDescription: String!
  link: String
  repository: String
  published: Boolean!
  createdAt: String!
  slug: String!
  images: [Image!]
  labels: [Label!]
  

}

input UpdateProjectInput{
  title: String
  description: String
  shortDescription: String
  link: String
  repository: String
  published: Boolean
  createdAt: String
  slug: String
  images: [Image]
  labels: [Label]
  
}